{"version":3,"sources":["axios-instance.js","component/navbar.js","container/main.js","container/analytics.js","component/error.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","navbar","className","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Main","props","useState","name","setName","email","setEmail","dob","setDOB","jobTitle","setJobTitle","salary","setSalary","age","setAge","gender","setGender","marriageStatus","setMarriageStatus","companyName","setCompanyName","companyType","setCompanyType","city","setCity","state","setState","zipCode","setZipCode","companySize","setCompanySize","projectTitle","setProjectTitle","projectDescription","setProjectDescription","projectLink","setProjectLink","workEx","setWorkEx","Container","style","marginLeft","marginBottom","Form","Jumbotron","width","padding","backgroundColor","Group","Label","Control","type","placeholder","value","onChange","event","target","InputGroup","Prepend","Text","FormControl","Append","as","marginRight","ButtonGroup","toggle","map","radio","idx","ToggleButton","variant","checked","e","currentTarget","rows","aria-describedby","Check","label","Button","onClick","empData","post","then","res","console","log","catch","error","Analytics","setEmpData","useEffect","get","data","empName","Object","keys","key","empAge","empJobTitle","empSalary","compyType","empWorkEx","Fragment","alignSelf","layout","i","x","y","w","h","cols","rowHeight","labels","datasets","borderColor","borderWidth","weight","height","options","maintainAspectRatio","hoverOffset","App","path","exact","component","MainPage","Error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da9164fc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://form-data-7c838-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","// import {Link} from 'react-router-dom'\r\nimport {Nav,Navbar} from 'react-bootstrap';\r\nimport './navbar.css';\r\n\r\nconst navbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n    <Navbar expand=\"lg\">\r\n    <Navbar.Brand className=\"heading\" href=\"/\"> Assignment by Zentri Studios </Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"/task1/#/\"> Home Page </Nav.Link>\r\n       <Nav.Link href=\"/task1/#/analytics\"> Analytics Page </Nav.Link>\r\n      </Nav>     \r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default navbar;","import React ,{ useState } from 'react';\r\nimport axios from '../axios-instance';\r\n\r\nimport { Container, Form, Jumbotron,Button,ButtonGroup,ToggleButton, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Nav from '../component/navbar';\r\n\r\nfunction Main(props) {\r\n\r\n    \r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [dob, setDOB] = useState(''); \r\n    const [jobTitle, setJobTitle] = useState(''); \r\n    const [salary, setSalary] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [marriageStatus, setMarriageStatus] = useState('Unmarried');\r\n   \r\n    const [companyName, setCompanyName] = useState('');\r\n    const [companyType, setCompanyType] = useState('IT Service');\r\n    const [city, setCity] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [zipCode, setZipCode] = useState('');\r\n    const [companySize, setCompanySize] = useState('');\r\n    const [projectTitle, setProjectTitle] = useState('');\r\n    const [projectDescription, setProjectDescription] = useState('');\r\n    const [projectLink, setProjectLink] = useState('');\r\n    const [workEx, setWorkEx] = useState('');\r\n    \r\n    const radios = [\r\n    { name: 'Married', value: 'Married'},\r\n    { name: 'Unmarried', value: 'Unmarried'},\r\n  ];\r\n\r\n  const company = [\r\n    { name: 'IT Service', value: 'IT Service' },\r\n    { name: 'Pharmaceutical', value: 'Pharmaceutical' },\r\n    { name: 'Automobile', value: 'Automobile' },\r\n    { name: 'Production Based', value: 'Production Based' },\r\n  ];\r\n\r\n  const submitHandler = () =>{\r\n    \r\n  const empData = {\r\n        name: name,\r\n        email: email,\r\n        age: age,\r\n        city: city,\r\n        state : state,\r\n        jobTitle: jobTitle,\r\n        salary: salary,\r\n        gender: gender,\r\n        marriageStatus: marriageStatus,\r\n        companyType: companyType,\r\n        companySize: companySize,\r\n        workEx: workEx,\r\n        \r\n    }\r\n        \r\n    axios.post('/empData.json',empData)\r\n        .then( res =>{\r\n             console.log(res);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n   \r\n  }\r\n\r\n    return (\r\n        <div>\r\n            <Nav/>\r\n\r\n            <Container >\r\n                <br/><br/>\r\n                <div style={{marginLeft:\"10%\",marginBottom:\"3%\"}}>\r\n                    <h2>Employ Data Entry</h2>\r\n                    <hr/>\r\n                </div>                \r\n            \r\n                    <Form >\r\n                    <Jumbotron style={{ width:\"80%\", padding:\"4%\", marginLeft:\"10%\", backgroundColor:\"#f0f8ff\" }}>                           \r\n                        <Form.Group >\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Your Name\" value={name} onChange={ (event)=> setName(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"name@example.com\" value={email} onChange={ (event)=> setEmail(event.target.value)}  />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>DOB</Form.Label>\r\n                            <Form.Control type=\"date\" value={dob} onChange={ (event)=> setDOB(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Job Title</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Your Job Title\" value={jobTitle } onChange={ (event)=> setJobTitle(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Salary</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl placeholder=\"100\" type=\"number\" value={salary} onChange={ (event)=> setSalary(event.target.value)} />\r\n                            <InputGroup.Append>\r\n                            <InputGroup.Text>.00</InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Age</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Your Age\" value={age} onChange={ (event)=> setAge(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Gender</Form.Label>\r\n                            <Form.Control as=\"select\" value={gender} onChange={ (event)=> setGender(event.target.value)}>\r\n                            <option>Male</option>\r\n                            <option>Female</option>\r\n                            <option>Other</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Label style={{marginRight:\"20px\"}}>Marriage Status </Form.Label>\r\n                        <Form.Group >\r\n                        <ButtonGroup toggle>\r\n                        {radios.map((radio, idx) => (\r\n                            <ToggleButton\r\n                            key={idx}\r\n                            type=\"radio\"\r\n                            variant=\"outline-success\"\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={marriageStatus === radio.value}\r\n                            onChange={(e) => setMarriageStatus(e.currentTarget.value)}\r\n                            >\r\n                            {radio.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                        </ButtonGroup>\r\n                        </Form.Group>\r\n                        \r\n                        </Jumbotron>\r\n                            <br/>\r\n                            <div style={{marginLeft:\"10%\",marginBottom:\"3%\"}}>\r\n                            <h2>Company Details</h2>\r\n                            <hr/>\r\n                            </div>\r\n                        <Jumbotron style={{ width:\"80%\", padding:\"4%\", marginLeft:\"10%\", backgroundColor:\"#f0f8ff\" }}>                           \r\n                        <Form.Group >\r\n                            <Form.Label>Company Name </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Company Name\" value={companyName} onChange={ (event)=> setCompanyName(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label style={{marginRight:\"20px\"}} >Company Type </Form.Label>\r\n                            <ButtonGroup toggle>\r\n                        {company.map((radio, idx) => (\r\n                            <ToggleButton\r\n                            key={idx}\r\n                            type=\"radio\"\r\n                            variant=\"outline-dark\"\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={companyType === radio.value}\r\n                            onChange={(e) => setCompanyType(\r\n                                e.currentTarget.value)}\r\n                            >\r\n                            {radio.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                        </ButtonGroup>\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Company City </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Company City\" value={city} onChange={ (event)=> setCity(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>State</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Company State\" value={state} onChange={ (event)=> setState(event.target.value)}  />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Zip Code</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\" Zip code\" value={zipCode} onChange={ (event)=> setZipCode(event.target.value)} />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group >\r\n                            <Form.Label>Company Size</Form.Label>\r\n                            <Form.Control as=\"select\" value={companySize} onChange={ (event)=> setCompanySize(event.target.value)}>\r\n                            <option> 11-50 </option>\r\n                            <option> 50-200 </option>\r\n                            <option> 200-1000 </option>\r\n                            <option> 1000-10000 </option>\r\n                            <option> 10000 + </option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        </Jumbotron>\r\n                        <br/>\r\n                        <div style={{marginLeft:\"10%\",marginBottom:\"3%\"}}>\r\n                            <h2>Enter Project Details</h2>\r\n                            <hr/>\r\n                        </div>\r\n                        <Jumbotron style={{ width:\"80%\", padding:\"4%\", marginLeft:\"10%\", backgroundColor:\"#f0f8ff\" }}>                            \r\n                        <Form.Group >\r\n                            <Form.Label>Project Title </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Project title\" value={projectTitle } onChange={ (event)=> setProjectTitle(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Describe Projects in short</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} placeholder=\"Project description\" value={projectDescription} onChange={ (event)=> setProjectDescription(event.target.value)} />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group >\r\n                            <Form.Label>Project link </Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon3\">\r\n                                https://example.com/users/\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"basic-url\" aria-describedby=\"basic-addon3\" value={projectLink} onChange={(event)=> setProjectLink(event.target.value)} />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Work Experience </Form.Label>\r\n                            <Form.Control type=\"range\" value={workEx} onChange={(event)=> setWorkEx(event.target.value)} />\r\n                        </Form.Group>\r\n                    \r\n                        <Form.Group >\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\"/>\r\n                        </Form.Group>\r\n                        <Button variant=\"outline-primary\" onClick={submitHandler}>\r\n                            Submit\r\n                        </Button>\r\n                        </Jumbotron>\r\n                    </Form>                \r\n            </Container>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, {useEffect, useState} from 'react';\r\nimport GridLayout from 'react-grid-layout';\r\nimport Navbar from '../component/navbar';\r\nimport { Bar,Polar,Line} from 'react-chartjs-2'; \r\n// import { defaults } from 'react-chartjs-2';\r\n\r\nimport  \"../../node_modules/react-grid-layout/css/styles.css\";\r\nimport \"../../node_modules/react-resizable/css/styles.css\";\r\nimport axios from '../axios-instance';\r\n\r\n// defaults.global.animation = false;\r\n\r\nfunction Analytics() {\r\n\r\n    const [empData,setEmpData] = useState([ ]);\r\n\r\n    useEffect(()=>{\r\n        axios.get('/empData.json')\r\n        .then(res => {\r\n//            console.log(res.data);\r\n            setEmpData(res.data);\r\n        })\r\n        .catch(error =>{\r\n            console.log(error);\r\n        })\r\n    }, []);\r\n\r\n    // console.log(empData.age);\r\n    var empName = Object.keys(empData).map(function (key) {\r\n        return empData[key].name;\r\n    });\r\n\r\n    var empAge = Object.keys(empData).map(function (key) {\r\n        return empData[key].age;\r\n    });\r\n\r\n    var empJobTitle = Object.keys(empData).map(function (key) {\r\n        return empData[key].jobTitle;\r\n    });\r\n\r\n    var empSalary = Object.keys(empData).map(function (key) {\r\n        return empData[key].salary;\r\n    });\r\n\r\n    var compyType = Object.keys(empData).map(function (key) {\r\n        return empData[key].companyType;\r\n    });\r\n\r\n    var empWorkEx = Object.keys(empData).map(function (key) {\r\n        return empData[key].workEx;\r\n    });\r\n\r\n\r\n    const layout = [\r\n        {i: 'a', x: 0, y: 0, w: 2.5, h: 2},\r\n        {i: 'b', x: 3, y: 1, w: 2.5, h: 2},\r\n        {i: 'c', x: 0, y: 1, w: 3, h: 2},\r\n        {i: 'd', x: 4, y: 0, w: 3, h: 2}\r\n        ];\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Navbar/>\r\n            {/* {sum} */}\r\n            <div style={{marginLeft:\"1rem\", padding:\"1rem\"}}>\r\n                <h1>Analytics of Employ data</h1>\r\n            </div>\r\n            <div style={{padding:\"2rem\", alignSelf:\"center\"}}>\r\n              <GridLayout className=\"layout\" layout={layout} cols={6} rowHeight={200} width={1450}>\r\n                <div key=\"a\" >\r\n                    <Bar\r\n                        data={{\r\n                            labels:empName,\r\n                            datasets:[{\r\n                                label: 'Age',\r\n                                data: empAge,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ],\r\n                                borderWidth: 1\r\n                            }]\r\n                        }}\r\n                        weight={200}\r\n                        height={200}\r\n                        options={{\r\n                            maintainAspectRatio: false\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div key=\"b\" >\r\n                    <Polar\r\n                        data={{\r\n                            labels: compyType ,\r\n                              datasets: [{\r\n                                 data: empWorkEx ,\r\n                                backgroundColor: [\r\n                                    'rgb(255, 99, 132)',\r\n                                    'rgb(75, 192, 192)',\r\n                                    'rgb(255, 205, 86)',\r\n                                    'rgb(201, 203, 207)',\r\n                                    'rgb(54, 162, 235)'                                 \r\n                                ],\r\n                                \r\n                              }]\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div key=\"c\">\r\n                <Line\r\n                        data={{\r\n                            labels: empJobTitle,\r\n                              datasets: [{\r\n                                label: 'Emp Salary with Job',                                \r\n                                data: empSalary,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)'                                 \r\n                                ],\r\n                                hoverOffset: 4\r\n                              }]\r\n                        }}\r\n                        style={{borderColor:'black'}}\r\n                    />\r\n                </div>\r\n                <div key=\"d\">\r\n                <Line\r\n                        data={{\r\n                            labels: empJobTitle,\r\n                              datasets: [{\r\n                                label: 'Work Experience with Job title',                                \r\n                                data: empWorkEx,\r\n                                backgroundColor: [\r\n                                    'rgb(255, 99, 132)',\r\n                                    'rgb(75, 192, 192)',\r\n                                    'rgb(255, 205, 86)',\r\n                                    'rgb(201, 203, 207)',\r\n                                    'rgb(54, 162, 235)'                                 \r\n                                ],\r\n                                hoverOffset: 4\r\n                              }]\r\n                        }}\r\n                        style={{borderColor:'black'}}\r\n                    />\r\n                </div>\r\n              </GridLayout>\r\n\r\n           \r\n            </div> \r\n       \r\n        </React.Fragment>\r\n        \r\n    );\r\n};\r\n\r\nexport default Analytics;","const error = () =>{\r\n    return(\r\n        <h1>404 Error!</h1>\r\n    );\r\n}\r\n\r\nexport default error;","import {Route,Switch } from 'react-router-dom'\n\nimport './App.css';\nimport MainPage from './container/main';\nimport Analytics from './container/analytics';\nimport Error from './component/error';\n\nfunction App() {\n  return (\n   \n       <Switch>\n           <Route path=\"/\" exact component={MainPage} />\n           <Route path=\"/analytics\" exact component={Analytics} />\n           <Route component={Error}  /> \n       </Switch>\n\n      \n   \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <HashRouter>\n     <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}